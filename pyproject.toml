[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "astronomer-telescope"
dynamic = ["version"]
description = "A tool to observe distant (or local!) Airflow installations, and gather metadata or other required data."
readme = "README.md"
authors = [
    { name = "Fritz Davenport", email = "fritz@astronomer.io" },
    { name = "CETA Team", email = "ceta@astronomer.io" },
    { name = "Astronomer", email = "humans@astronomer.io" }
]
requires-python = ">=3.6.2"
dependencies = [

  # for kubernetes mode
  "kubernetes >= 21.7",

  # for ssh mode
  "fabric >= 2.6.0",

  # for docker mode
  "docker >= 5.0.3",

  # for local mode
  "invoke >= 1.6.0",

  # General
  "PyYAML >= 6.0",
  "click >= 8.0.3", # CLI
  "lazyimport >= 0.0.4", # don't load kube/docker unless we need to
  "halo >= 0.0.31",  # loady-spinny
  "retrying >= 1.3.3",
  "importlib_metadata; python_version < '3.8'",
  "rich >= 11.1.0",
]

[project.urls]
Homepage = "https://astronomer.io"
Source = "https://github.com/astronomer/telescope/"

#[tool.setuptools]
#include-package-data = true

[tool.setuptools.packages.find]
exclude = [
    "*venv", "*venv.*",
    "*tests.*", "*tests",
    "*build", "*build.*",
    "*dist", "*dist.*",
]

[tool.setuptools.dynamic]
version = { attr = "astronomer_telescope.__version__" }


[project.entry-points.console_scripts]
"telescope" =  "astronomer_telescope.__main__:telescope"

[project.scripts]
"telescope" =  "astronomer_telescope.__main__:telescope"

[project.optional-dependencies]
dev = [
  # build
  "pyinstaller >= 4.10",
  "build",
  "twine",

  # pre-commit
  "pre-commit >= 2.14",
  "ruff",
  "black",
  "pylint",
  "isort",

  # docs
  "mkdocs",
  "mkdocs-click",
  "mkdocs-material",
  "pygments",

  # test
  "pytest",
  "pytest-cov",
  "pytest-sugar",
  "pytest-mock",
  "apache-airflow",
]


[tool.black]
# https://github.com/psf/black
target-version = ["py38"]
line-length = 120
color = true
exclude = '''
/(
    \.git
    | \.venv
    | build
    | dist
    | venv
    | tests/
    | airflow_report/__main__.py
)/
'''

[tool.bandit]
exclude_dirs = ["tests"]
skips = [
    "B307", # eval for dag obfuscation
    "B310", # urlopen in for airflow_Report.pyz
    "B608"  # SQL Injection in airflow_report.pyz
]


[tool.ruff]
line-length = 120

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 38
line_length = 120

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["tests/resources/", "hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--ignore=tests/resources/example-dag.py",
  "--ignore=resources/fix.py",
  "--strict-markers",
  "--tb=short",
  "--disable-warnings",
  "--no-header",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]
